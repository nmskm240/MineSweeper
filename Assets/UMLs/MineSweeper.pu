@startuml MineSweeper

package MineSweeper
{
    package UI
    {
        class Counter
        {
            -_image:Image
            -_value:Text
            +<<property>>Value:int
        }
        class Dialog
        {
            -_body:TextMeshProUGUI
            -_agree:Button
            -_disAgree:Button
            +Show(text:string,onAgree:Action,onDisAgree:Action)
        }
        class DialogFactory
    }
    class Cell
    {
        -_aroundCells:List<Cell>
        +<<property>>CanRaiseFlag:bool
        +<<property>>IsOpen:bool{private set}
        +<<property>>CanOpen:bool{get only}
        +<<property>>HasMine:bool{private set}
        +<<property>>Mines:int{get only}
        +AddAroundCell(cell:Cell):void
        +Init(hasMine:bool):void
        +Open():void
        +PutMine():void
        +Restore():void
    }
    class CellViewer
    {
        -_image:Image
        -_contents:Image
        -_none:Sprite
        -_mine:Sprite
        -_flag:Sprite
        -_number:Sprite[10]
        -_open:Color
        -_close:Color
        +Open(hasMine:bool,mines:int):void
        +ToggleFlag():void
        +Restore():void
    }
    class CellController
    {
        -_model:Cell
        -_viewer:CellViewer
        -_onOpen:UnityEvent
        -_onStepMine:UnityEvent
        +<<property>>OnOpen:UnityEvent{get only}
        +<<property>>OnStepMine:UnityEvent{get only}
        +<<property>>Model:Cell{get only}
        +<<property>>Viewer:CellView:{get only}
        +<<property>>Pos:Vector2{private set}
        +Init(pos:Vector2):void
        +Restore():void
        +Open():void
        +OnLongPressed():void
    }
    class CellFactory
    class Stage
    {
        -_cells:List<CellController>
        +<<property>>Cells:IEnumertable<CellController>{get only}
        +<<property>>Width:int{private set}
        +<<property>>Height:int{private set}
        +<<property>>Mines:int{private set}
        +<<property>>IsSuccess:bool{get only}
        -FillCell():void
        -CellInit():void
        -PutMines():void
        +Create():void
        +ReCreate():void
    }
    class StageViewer
    {
        -_gridLayout:GridLayoutGroup
        +Resize(width:int,height:int,mines:int):void
    }
    class StageController
    {
        -_model:Stage
        -_viewer:StageViewer
        -_counter:Counter
        +<<property>>Model:Stage{get only}
        +<<property>>Viewer:StageViewer{get only}
    }
    interface IStageFailCallback
    {
        +OnFail():void
    }
    interface IStageSuccessCallback
    {
        +OnSuccess():void
    }
}

abstract Factory<T>
{
    -_original:T
    +Create():T
}

DialogFactory --|> Factory
DialogFactory --> Dialog : create 
CellFactory --|> Factory
CellFactory --> CellController : Create
CellController --> Cell
CellController --> CellViewer
Stage --* CellController
CellController ..> IStageFailCallback : callback
CellController ..> IStageSuccessCallback : callback
StageController --> Stage
StageController --> StageViewer
StageController --> Counter
StageController ..|> IStageFailCallback
StageController ..|> IStageSuccessCallback
StageController --> Dialog

@enduml